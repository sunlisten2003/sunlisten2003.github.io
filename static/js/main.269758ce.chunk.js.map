{"version":3,"sources":["pages/todo/actions.js","pages/category/reducer.js","pages/goodsList/reducer.js","common/constant.js","pages/goodsDetail/reducer.js","pages/home/reducer.js","reducers.js","pages/todo/reducer.js","pages/main/reducer.js","pages/todo/components/link.js","pages/todo/containers/filterLink.js","pages/todo/components/footer.js","pages/todo/containers/addTodo.js","pages/todo/components/todoItem.js","pages/todo/components/todoList.js","pages/todo/containers/visibleTodoList.js","pages/todo/index.js","pages/demo/index.js","common/components/nav-bar.js","common/components/action.js","pages/home/components/home.js","pages/home/index.js","pages/home/actions.js","pages/category/components/levelOneCategoryList.js","pages/category/containers/levelOneCategoryList.js","pages/category/actions.js","common/components/divider.js","pages/category/components/levelTwoCategoryList.js","pages/category/containers/levelTwoCategoryList.js","pages/category/index.js","common/components/custom-icon.js","pages/cart/index.js","pages/me/index.js","pages/main/components/main.js","pages/main/index.js","pages/main/actions.js","pages/goodsList/components/goodsList.js","pages/goodsList/index.js","pages/goodsList/actions.js","pages/goodsDetail/components/goodsDetail.js","pages/goodsDetail/index.js","pages/goodsDetail/actions.js","pages/orderConfirm/index.js","routes/index.js","serviceWorker.js","index.js"],"names":["nextTodoId","VisibilityFilters","findCategoryListIndex","list","id","i","length","initialGoodsList","dataSource","DataSource","rowHasChanged","row1","row2","goodsList","rData","LeftOneRightTwo","LeftTwoRightOne","OnePicture","GoodsList","URL","CATEGORY_ID","ACTIVITY_ID","GOODS_ID","initialGoodsDetail","goods","mediaList","colorList","colorImageIndexList","sizeList","colorSizeList","skuList","initialHomeData","banner","actionList","navigation","templateList","combineReducers","todos","state","action","type","text","completed","map","todo","visibilityFilter","filter","mainSelectedTab","tabName","categoryData","concat","categoryList","children","item","level","idx","parentId","push","t","categorySelectedLevelOneIndex","index","goodsListData","cloneWithRows","goodsListPage","page","goodsListIsRefreshing","isRefreshing","goodsListIsNoMoreData","isNoMoreData","goodsDetailData","goodsDetail","video","skuPics","forEach","colorPics","color","picList","pic","url","Set","sizeSet","sku","add","size","indexOf","Array","from","sort","a","b","Constant","goodsDetailColorIndex","colorIndex","goodsDetailSelectedSize","selectedSize","goodsDetailCurrentSkuPrice","currentSkuPrice","goodsDetailCurrentSku","currentSku","goodsDetailCurrentOpType","currentOpType","goodsDetailIsShowSkuModal","isShowSkuModal","homeData","data","Link","active","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","input","onSubmit","e","preventDefault","value","trim","ref","node","TodoItem","textDecoration","className","TodoList","toggleTodo","key","getVisibleTodos","Error","Todo","Demo","imgHeight","setTimeout","setState","mode","padding","background","overflow","frameOverflow","cellSpacing","slideWidth","autoplay","infinite","beforeChange","to","console","log","this","val","href","display","position","top","slideIndex","height","boxShadow","src","alt","width","objectFit","React","Component","CommonNavBar","props","title","icon","onLeftClick","Action","onUrlActionClick","bind","window","location","content","pathname","Home","axios","get","then","response","onHomeDataResponse","resetPage","wrap","template","subType","Item","direction","store","match","history","actionHomeGetData","LevelOneCategoryList","selectedIndex","onTapLevelOneCategory","category","backgroundColor","name","actionCategorySetLevelOneIndex","Divider","borderBottomWidth","borderBottomColor","borderBottomStyle","LevelTwoCategoryList","levelThreeCategoryDom","Category","onCategoryDataResponse","actionCategoryGetData","IconFontIcon","restProps","xlinkHref","Cart","Me","Main","bottom","unselectedTintColor","tintColor","barTintColor","selectedIcon","selected","selectedTab","onPress","onSelectedTab","renderContent","actionMainChangeTab","MainComponent","onEndReached","onRefresh","params","thirdCategoryId","setPage","onGoodsListDataResponse","setNoMoreData","event","setRefreshing","goBack","renderRow","rowData","sectionID","rowID","marginRight","spu","lineHeight","marginBottom","fontSize","price","priceOrg","renderSeparator","borderTop","borderBottom","pageSize","useBodyScroll","scrollRenderAheadDistance","onEndReachedThreshold","pullToRefresh","refreshing","distanceToRefresh","actionGoodsListSetPage","actionGoodsListGetData","actionGoodsListSetIsRefreshing","GoodsDetail","onClickBottomButton","updateCurrentSku","onSkuModalConfirmClick","goodsData","setCurrentSkuPrice","onGoodsDetailDataResponse","setIsShowSkuModal","setCurrentOpType","setCurrentSku","setColorIndex","setSelectedSize","success","fail","selectedColorPicIndex","selectedMediaIndex","playsInline","fluid","poster","autoHide","borderStr","widthStr","heightStr","border","onColorClick","description","desc","flexDirection","popup","onClose","visible","animationType","fontWeight","has","onChange","onSizeTagClick","actionGoodsDetailGetData","actionGoodsDetailSetColorIndex","actionGoodsDetailSetSelectedSize","actionGoodsDetailSetCurrentSkuPrice","actionGoodsDetailSetCurrentSku","actionGoodsDetailSetCurrentOpType","actionGoodsDetailSetIsShowSkuModal","OrderConfirm","justifyContent","alignItems","RouterConfig","path","exact","component","Boolean","hostname","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.269758ce.chunk.js","sourcesContent":["let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","function findCategoryListIndex(list, id) {\n    for (let i = 0; i < list.length; ++i) {\n        if (list[i].id === id) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nexport const categoryData = (state = [], action) => {\n    switch (action.type) {\n        case 'CATEGORY_GET_DATA':\n            let list = [].concat(action.categoryList);\n            let i = 0;\n\n            for (i = 0; i < list.length; ++i) {\n                list[i].children = [];\n            }\n\n            for (i = 0; i < list.length; ++i) {\n                let item = list[i];\n                if (item.level === 3) {\n                    let idx = findCategoryListIndex(list, item.parentId);\n                    list[idx].children.push(item)\n                }\n            }\n\n            for (i = 0; i < list.length; ++i) {\n                let item = list[i];\n                if (item.level === 2) {\n                    let idx = findCategoryListIndex(list, item.parentId);\n                    list[idx].children.push(item)\n                }\n            }\n\n            return list.filter(t => t.level === 1)\n\n        default:\n            return state\n    }\n}\n\nexport const categorySelectedLevelOneIndex = (state = 0, action) => {\n    switch (action.type) {\n        case 'CATEGORY_SET_LEVEL_ONE_INDEX':\n            return action.index\n\n        default:\n            return state\n    }\n}\n","import {ListView} from 'antd-mobile';\n\nconst initialGoodsList = {\n    dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2,\n      }),\n    goodsList: [],\n    rData: []\n}\n\nexport const goodsListData = (state = initialGoodsList, action) => {\n    switch (action.type) {\n        case 'GOODS_LIST_GET_DATA':\n            if (action.goodsList.length > 0) {\n                let i = 0;\n                let rData = [].concat(state.rData);\n                for (i = 0; i<action.goodsList.length; ++i) {\n                    rData.push('row-'+action.goodsList[i].id);\n                }\n                return {\n                    dataSource: state.dataSource.cloneWithRows(rData),\n                    goodsList: [].concat(state.goodsList).concat(action.goodsList),\n                    rData: rData\n                }\n            } else {\n                return state;\n            }\n            \n        case 'GOODS_LIST_RESET_PAGE':\n            return initialGoodsList\n\n        default:\n            return state\n    }\n}\n\nexport const goodsListPage = (state = 1, action) => {\n    switch (action.type) {\n        case 'GOODS_LIST_PAGE':\n            return action.page\n            \n        case 'GOODS_LIST_RESET_PAGE':\n            return 1\n        default:\n            return state\n    }\n}\n\nexport const goodsListIsRefreshing = (state = false, action) => {\n    switch (action.type) {\n        case 'GOODS_LIST_SET_REFRESHING':\n            return action.isRefreshing\n            \n        case 'GOODS_LIST_RESET_PAGE':\n            return false\n        default:\n            return state\n    }\n}\n\nexport const goodsListIsNoMoreData = (state = false, action) => {\n    switch (action.type) {\n        case 'GOODS_LIST_SET_NO_MORE_DATA':\n            return action.isNoMoreData\n        case 'GOODS_LIST_RESET_PAGE':\n            return false\n        default:\n            return state\n    }\n}\n","export default {\n  SHOPINCAT_API_HOST: 'http://47.92.91.189:8080',\n  SIZE_MAP: {\n    'XXXXS': 1,\n    'XXXS': 2,\n    'XXS': 3,\n    'XS': 4,\n    'S': 5,\n    'M': 6,\n    'L': 7,\n    'XL': 8,\n    'XXL': 9,\n    'XXXL': 10,\n    'XXXXL': 11,\n  },\n  HOME_TEMPLATE_SUB_TYPE: {\n    LeftOneRightTwo: 1,\n    LeftTwoRightOne: 2,\n    OnePicture: 3,\n    GoodsList: 4\n  },\n  ACTION_TYPE_ID: {\n    URL: 1,\n    CATEGORY_ID: 2,\n    ACTIVITY_ID: 3,\n    GOODS_ID: 4\n  }\n}","import Constant from '../../common/constant';\n\nconst initialGoodsDetail = {\n    goods: {},\n    mediaList: [],\n    colorList: [],\n    colorImageIndexList: [],\n    sizeList: [],\n    colorSizeList: [],\n    skuList: []\n}\n\nexport const goodsDetailData = (state = initialGoodsDetail, action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_GET_DATA':\n            let goods = action.goodsDetail;\n            let mediaList = [];\n            let colorList = [];\n            let colorImageIndexList = [];\n            let skuList = goods.skuList;\n            let colorSizeList = [];\n            let sizeList = [];\n\n            //if goods.video not empty, put the video url into mediaList\n            mediaList.push(goods.video);\n\n            // generate mediaList\n            goods.skuPics.forEach(colorPics => {\n                colorList.push(colorPics.color);\n                colorImageIndexList.push(mediaList.length);\n                colorPics.picList.forEach(pic => {\n                    mediaList.push(pic.url);\n                });\n            });\n\n            // generate size list\n            for (let i = 0; i < colorList.length; ++i) {\n                colorSizeList.push(new Set());\n            }\n\n            let sizeSet = new Set();\n            skuList.forEach(sku => {\n                sizeSet.add(sku.size);\n                colorSizeList[colorList.indexOf(sku.color)].add(sku.size);\n            });\n            sizeList = Array.from(sizeSet);\n            sizeList = sizeList.sort((a, b) => {\n                return Constant.SIZE_MAP[a] < Constant.SIZE_MAP[b] ? -1 : 1;\n            });\n\n            return {\n                goods,\n                mediaList,\n                colorList,\n                colorImageIndexList,\n                sizeList,\n                colorSizeList,\n                skuList\n            }\n\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return initialGoodsDetail\n\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailColorIndex = (state = -1, action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_COLOR_INDEX':\n            return action.colorIndex\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return -1\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailSelectedSize = (state = '', action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_SELECTED_SIZE':\n            return action.selectedSize\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return ''\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailCurrentSkuPrice = (state = 0, action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_CURRENT_SKU_PRICE':\n            return action.currentSkuPrice\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return 0\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailCurrentSku = (state = null, action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_CURRENT_SKU':\n            return action.currentSku\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailCurrentOpType = (state = 'cart', action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_CURRENT_OP_TYPE':\n            return action.currentOpType\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return 'cart'\n        default:\n            return state\n    }\n}\n\nexport const goodsDetailIsShowSkuModal = (state = false, action) => {\n    switch (action.type) {\n        case 'GOODS_DETAIL_SET_IS_SHOW_SKU_MODAL':\n            return action.isShowSkuModal\n\n        case 'GOODS_DETAIL_RESET_PAGE':\n            return false\n        default:\n            return state\n    }\n}\n\n","\nconst initialHomeData = {\n    banner: {actionList:[]},\n    navigation: {actionList:[]},\n    templateList: []\n}\n\nexport const homeData = (state = initialHomeData, action) => {\n    switch (action.type) {\n        case 'HOME_GET_DATA':\n            let data = action.homeData;\n\n            return {\n                banner: data.banner,\n                navigation: data.navigation,\n                templateList: data.templateList\n            }\n\n        case 'HOME_RESET_PAGE':\n            return initialHomeData\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport { todos, visibilityFilter } from './pages/todo/reducer'\nimport { mainSelectedTab } from './pages/main/reducer'\nimport { categoryData, categorySelectedLevelOneIndex } from './pages/category/reducer'\nimport { goodsListData, goodsListPage, goodsListIsRefreshing, goodsListIsNoMoreData } from './pages/goodsList/reducer';\nimport { goodsDetailData, goodsDetailColorIndex, goodsDetailSelectedSize, goodsDetailCurrentSkuPrice, goodsDetailCurrentSku, goodsDetailCurrentOpType, goodsDetailIsShowSkuModal } from './pages/goodsDetail/reducer';\nimport { homeData } from './pages/home/reducer';\n\nexport default combineReducers({\n  todos, visibilityFilter,\n  mainSelectedTab,\n  categoryData, categorySelectedLevelOneIndex,\n  goodsListData, goodsListPage, goodsListIsRefreshing, goodsListIsNoMoreData,\n  goodsDetailData, goodsDetailColorIndex, goodsDetailSelectedSize, goodsDetailCurrentSkuPrice, goodsDetailCurrentSku, goodsDetailCurrentOpType, goodsDetailIsShowSkuModal,\n  homeData\n})","import { VisibilityFilters } from './actions'\n\nexport const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        default:\n            return state\n    }\n}\n\nexport const visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter\n        default:\n            return state\n    }\n}\n","\nexport const mainSelectedTab = (state = 'home', action) => {\n    switch (action.type) {\n        case 'MAIN_CHANGE_TAB':\n            return action.tabName\n        default:\n            return state\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px'\n    }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)","import React from 'react'\nimport FilterLink from '../containers/filterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../todo.css'\n\nconst TodoItem = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n    className='todoitem'\n  >\n    {text}\n  </li>\n)\n\nTodoItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default TodoItem","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './todoItem'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map(todo => (\n      <TodoItem key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/todoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)","import React from 'react'\nimport Footer from './components/footer'\nimport AddTodo from './containers/addTodo'\nimport VisibleTodoList from './containers/visibleTodoList'\n\nconst Todo = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default Todo","import React from 'react';\nimport { Carousel, WingBlank, NavBar } from 'antd-mobile';\n\nclass Demo extends React.Component {\n    state = {\n        data: ['1', '2', '3'],\n        imgHeight: 300,\n    }\n    componentDidMount() {\n        // simulate img loading\n        setTimeout(() => {\n            this.setState({\n                data: ['AiyWuByWklrrUDlFignR', 'TekJlZRVCjLFexlOCuWn', 'IJOtIlfsYdTyaDTRVrLI'],\n            });\n        }, 100);\n    }\n    render() {\n        return (\n            <>\n            <NavBar mode=\"dark\" >\n                {'ShopinCat'}\n            </NavBar>\n            <WingBlank>\n                <Carousel style={{\n                    padding: '16px',\n                    background: '#DEF1E5',\n                    overflow: 'hidden'\n                }}\n                    frameOverflow=\"visible\"\n                    cellSpacing={10}\n                    slideWidth={0.8}\n                    autoplay\n                    infinite\n                    beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\n                >\n                    {this.state.data.map((val, index) => (\n                        <a\n                            key={val}\n                            href=\"http://www.alipay.com\"\n                            style={{\n                                display: 'block',\n                                position: 'relative',\n                                top: this.state.slideIndex === index ? -10 : 0,\n                                height: this.state.slideIndex === index ? this.state.imgHeight+20 : this.state.imgHeight ,\n                                boxShadow: '2px 1px 1px rgba(0, 0, 0, 0.2)',\n                            }}\n                        >\n                            <img\n                                src={`https://zos.alipayobjects.com/rmsportal/${val}.png`}\n                                alt=\"\"\n                                style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                            />\n                        </a>\n                    ))}\n                </Carousel>\n            </WingBlank>\n            </>\n        );\n    }\n}\n\nexport default Demo","import React from 'react';\nimport { NavBar, Icon } from 'antd-mobile';\nimport '../style/nav-bar.css'\n\nclass CommonNavBar extends React.Component {\n    render() {\n        if (this.props.type === \"noBack\") {\n            return (\n                <NavBar className=\"navBarSticky\" mode=\"dark\" >\n                    {this.props.title}\n                </NavBar>\n            )\n        }\n\n        return (\n            <NavBar className=\"navBarSticky\" mode=\"dark\" icon={<Icon type=\"left\" />} onLeftClick={this.props.onLeftClick} >\n                {this.props.title}\n            </NavBar>\n        )\n    }\n}\n\nexport default CommonNavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Constant from '../constant';\n\n\nclass Action extends React.Component {\n    constructor(props) {\n        super(props)\n        this.onUrlActionClick = this.onUrlActionClick.bind(this)\n    }\n\n    onUrlActionClick() {\n        window.location.href = this.props.action.content\n    }\n\n    render() {\n        let action = this.props.action\n        let url = \"\"\n        switch (action.type) {\n            case Constant.ACTION_TYPE_ID.CATEGORY_ID:\n                url = \"/goodsList/\" + action.content\n                break\n            case Constant.ACTION_TYPE_ID.GOODS_ID:\n                url = \"/goodsDetail/\" + action.content\n                break\n            case Constant.ACTION_TYPE_ID.ACTIVITY_ID:\n                url = \"/activity/\" + action.content\n                break\n            default:\n                break\n        }\n\n\n        switch (action.type) {\n            case Constant.ACTION_TYPE_ID.CATEGORY_ID:\n            case Constant.ACTION_TYPE_ID.GOODS_ID:\n            case Constant.ACTION_TYPE_ID.ACTIVITY_ID:\n                return (\n                    <Link to={{ pathname: url }} >\n                        <img\n                            src={action.pic}\n                            alt={this.props.alt}\n                            className = {this.props.className}\n                        />\n                    </Link>\n                )\n            case Constant.ACTION_TYPE_ID.URL:\n                return (\n                        <img onClick={this.onUrlActionClick}\n                            src={action.pic}\n                            alt={this.props.alt}\n                            className = {this.props.className}\n                        />\n                )\n            default:\n                return <></>\n        }\n    }\n\n}\n\n\nexport default Action;","import React from 'react';\nimport { Carousel, Flex } from 'antd-mobile';\nimport Action from '../../../common/components/action';\nimport Constant from '../../../common/constant';\nimport axios from 'axios';\n\n\nclass Home extends React.Component {\n\n    componentDidMount() {\n        axios.get(Constant.SHOPINCAT_API_HOST + '/ADV/homeData').then(response => {\n            if (response && response.data && response.data.data) {\n                let homeData = response.data.data;\n                this.props.onHomeDataResponse(homeData);\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.resetPage();\n    }\n\n    render() {\n        return (\n            <div >\n                <div >\n                    <Carousel\n                        frameOverflow=\"visible\"\n                        infinite\n                        style={{ overflow: 'hidden', height: '60vw' }}\n                    >\n                        {this.props.banner.actionList.map((action) => {\n                            return (\n                                <div key={'homeBanner-' + action.id} style={{\n                                    display: 'block',\n                                    position: 'relative',\n                                    top: '0',\n                                    height: '60vw'\n                                }} >\n                                    <Action action={action} alt=\"banner\"  className=\"commonAction\"/>\n                                </div>\n                            )\n                        })}\n                    </Carousel>\n                </div>\n                <div >\n                    <Flex wrap=\"wrap\">\n                        {this.props.navigation.actionList.map((action) => (\n                            <div key={'homeNavigation-' + action.id} className=\"navigation\" >\n                                <Action action={action} alt=\"navigation\"  className=\"navigationAction\"/>\n                            </div>\n                        ))}\n                    </Flex>\n                </div>\n                <div >\n                    {\n                        this.props.templateList.map((template) => {\n                            switch (template.subType) {\n                                case Constant.HOME_TEMPLATE_SUB_TYPE.LeftOneRightTwo:\n                                    return (\n                                        <div key={'homeTemplate-' + template.id}>\n                                            <Flex className=\"templateContainer\" >\n                                                <Flex.Item style={{ width: '50vw', height: '56vw' }}><Action action={template.actionList[0]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                                <Flex.Item style={{ width: '50vw', height: '56vw' }}>\n                                                    <Flex direction=\"column\" style={{ width: '100%', height: '100%' }}>\n                                                        <Flex.Item style={{ width: '100%', height: '50%' }}><Action action={template.actionList[1]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                                        <Flex.Item style={{ width: '100%', height: '50%' }}><Action action={template.actionList[2]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                                    </Flex>\n                                                </Flex.Item>\n                                            </Flex>\n                                        </div>\n                                    )\n                                case Constant.HOME_TEMPLATE_SUB_TYPE.LeftTwoRightOne:\n                                    return (\n                                        <div key={'homeTemplate-' + template.id}>\n                                            <Flex className=\"templateContainer\" >\n                                                <Flex.Item style={{ width: '50vw', height: '56vw' }}>\n                                                    <Flex direction=\"column\" style={{ width: '100%', height: '100%' }}>\n                                                        <Flex.Item style={{ width: '100%', height: '50%' }}><Action action={template.actionList[0]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                                        <Flex.Item style={{ width: '100%', height: '50%' }}><Action action={template.actionList[1]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                                    </Flex>\n                                                </Flex.Item>\n                                                <Flex.Item style={{ width: '50vw', height: '56vw' }}><Action action={template.actionList[2]} alt=\"template\"  className=\"commonAction\"/></Flex.Item>\n                                            </Flex>\n                                        </div>\n                                    )\n                                case Constant.HOME_TEMPLATE_SUB_TYPE.OnePicture:\n                                    return (\n                                        <div key={'homeTemplate-' + template.id} className=\"templateContainer\">\n                                            <Action action={template.actionList[0]} alt=\"template\" className=\"commonAction\"/>\n                                        </div>\n                                    )\n                                case Constant.HOME_TEMPLATE_SUB_TYPE.GoodsList:\n                                    return (\n                                        <div key={'homeTemplate-' + template.id} className=\"templateContainer\">\n                                            GoodsList\n                                        </div>\n                                    )\n                                default:\n                                    return <div></div>\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Home;","import { connect } from 'react-redux';\nimport Home from './components/home';\nimport { actionHomeGetData, actionHomeResetPage } from './actions';\n\nimport './home.css';\n\nconst mapStateToProps = (store, ownProps) => ({\n  match: ownProps.match,\n  history: ownProps.history,\n  banner: store.homeData.banner,\n  navigation: store.homeData.navigation,\n  templateList: store.homeData.templateList\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onHomeDataResponse: (homeData) => dispatch(actionHomeGetData(homeData)),\n  resetPage: () => dispatch(actionHomeResetPage())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)","export const actionHomeGetData = homeData => ({\n  type: 'HOME_GET_DATA',\n  homeData\n})\n\n\nexport const actionHomeResetPage = () => ({\n  type: 'HOME_RESET_PAGE'\n})\n","import React from 'react'\n\nconst LevelOneCategoryList = ({ categoryList, selectedIndex, onTapLevelOneCategory }) => (\n    <div className='levelOneCategory'>\n        {categoryList.map((category, index) => (\n            <div key={category.id} className='categoryLevelOneItem' \n                style={{backgroundColor: selectedIndex === index ? 'rgba(0,0,0,0.05)' : '#ffffff'}}\n                onClick = {() => {onTapLevelOneCategory(index)}}>\n                {category.name}\n            </div>\n        ))}\n    </div>\n)\n\nexport default LevelOneCategoryList","import { connect } from 'react-redux';\nimport LevelOneCategoryList from '../components/levelOneCategoryList';\nimport { actionCategorySetLevelOneIndex } from '../actions';\n\nconst mapStateToProps = (store, ownProps) => ({\n    categoryList: store.categoryData,\n    selectedIndex: store.categorySelectedLevelOneIndex\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onTapLevelOneCategory: (index) => dispatch(actionCategorySetLevelOneIndex(index))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LevelOneCategoryList)\n\n","export const actionCategoryGetData = categoryList => ({\n  type: 'CATEGORY_GET_DATA',\n  categoryList\n})\n\nexport const actionCategorySetLevelOneIndex = index => ({\n  type: 'CATEGORY_SET_LEVEL_ONE_INDEX',\n  index\n})","import React from 'react'\n\nconst Divider = ({ color='#dddddd', height = '1px'}) => (\n    <div style={{borderBottomWidth: height, borderBottomColor: color, width: '100%', borderBottomStyle: 'solid'}}>\n    </div>\n  );\n  \n  export default Divider;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport Divider from '../../../common/components/divider'\n\nconst LevelTwoCategoryList = ({ categoryList }) => (\n    <div className='levelTwoCategory'>\n        {\n            categoryList.map((category) => {\n                let levelThreeCategoryDom = category.children.map((item) => (\n                    <Link key={item.id} to={{\n                        pathname: \"/goodsList/\"+item.id\n                    }} className='levelThreeCategoryItem'>\n                        <img src={item.pic} className='levelThreeCategoryImg' alt={item.name} />\n                    </Link>\n                ));\n\n                return (\n                    <div key={category.id}>\n                        <div className='levelTwoCategoryName'>{category.name}</div>\n                        <Divider />\n                        <div className='levelThreeCategory'>{levelThreeCategoryDom}</div>\n                    </div>\n                )\n            })\n        }\n    </div>\n)\n\nexport default LevelTwoCategoryList","import { connect } from 'react-redux';\nimport LevelTwoCategoryList from '../components/levelTwoCategoryList';\n\nconst mapStateToProps = (store, ownProps) => ({\n    categoryList: store.categoryData.length > 0 ? store.categoryData[store.categorySelectedLevelOneIndex].children : []\n})\n\nexport default connect(\n    mapStateToProps\n)(LevelTwoCategoryList)\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport LevelOneCategoryList from './containers/levelOneCategoryList';\nimport LevelTwoCategoryList from './containers/levelTwoCategoryList';\nimport Constant from '../../common/constant';\nimport { actionCategoryGetData } from './actions';\nimport './category.css';\n\nclass Category extends React.Component {\n    componentDidMount() {\n        axios.get(Constant.SHOPINCAT_API_HOST + '/GOODS/categoryList').then(response => {\n            this.props.onCategoryDataResponse(response.data.data)\n        });\n    }\n\n    render() {\n        return (\n            <div className='category'>\n                <LevelOneCategoryList />\n                <LevelTwoCategoryList />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onCategoryDataResponse: (categoryList) => dispatch(actionCategoryGetData(categoryList))\n})\n\nexport default connect(null, mapDispatchToProps)(Category);","import React from 'react';\nimport 'antd-mobile/lib/icon/style';\n\nconst IconFontIcon = ({ type, className = '', size = 'md', ...restProps }) => (\n  <svg\n    className={`am-icon am-icon-${size} ${className}`}\n    {...restProps}\n  >\n    <use xlinkHref={'#' + type} />\n  </svg>\n);\n\nexport default IconFontIcon;","import React from 'react'\nimport IconFontIcon from '../../common/components/custom-icon';\n\nclass Cart extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <IconFontIcon type=\"icon-cart-fill\" size=\"lg\"/>\n      </div>\n    );\n  }\n}\n\nexport default Cart","import React from 'react'\nimport IconFontIcon from '../../common/components/custom-icon';\n\nclass Me extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <IconFontIcon type=\"icon-me-fill\" size=\"lg\"/>\n      </div>\n    );\n  }\n}\n\nexport default Me","import React from 'react'\nimport { TabBar } from 'antd-mobile';\nimport NavBar from '../../../common/components/nav-bar';\nimport Home from '../../home';\nimport Category from '../../category';\nimport Cart from '../../cart';\nimport Me from '../../me';\nimport IconFontIcon from '../../../common/components/custom-icon';\n\nclass Main extends React.Component {\n\n  renderContent(tabName) {\n\n    let content;\n\n    switch (tabName) {\n      case 'category':\n        content = <Category />;\n        break;\n      case 'cart':\n        content = <Cart />;\n        break;\n      case 'me':\n        content = <Me />;\n        break;\n      case 'home':\n      default:\n        content = <Home />;\n    }\n\n    return (\n      <div >\n        <NavBar type=\"noBack\" title=\"ShopinCat\">\n          {'ShopinCat'}\n        </NavBar>\n        {content}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div style={{ position: 'fixed', height: '100%', width: '100%', bottom: 0 }}>\n          <TabBar\n            unselectedTintColor=\"#949494\"\n            tintColor=\"red\"\n            barTintColor=\"white\"\n          >\n            <TabBar.Item\n              title=\"Home\"\n              key=\"home\"\n              icon={<IconFontIcon type='icon-home' />}\n              selectedIcon={<IconFontIcon type='icon-home-fill' />}\n              selected={this.props.selectedTab === 'home'}\n              onPress={() => {\n                this.props.onSelectedTab('home')\n              }}\n            >\n              {this.renderContent('home')}\n            </TabBar.Item>\n            <TabBar.Item\n              icon={<IconFontIcon type='icon-category' />}\n              selectedIcon={<IconFontIcon type='icon-category-fill' />}\n              title=\"Category\"\n              key=\"category\"\n              selected={this.props.selectedTab === 'category'}\n              onPress={() => {\n                this.props.onSelectedTab('category')\n              }}\n            >\n              {this.renderContent('category')}\n            </TabBar.Item>\n            <TabBar.Item\n              icon={<IconFontIcon type='icon-cart' />}\n              selectedIcon={<IconFontIcon type='icon-cart-fill' />}\n              title=\"Cart\"\n              key=\"cart\"\n              selected={this.props.selectedTab === 'cart'}\n              onPress={() => {\n                this.props.onSelectedTab('cart')\n              }}\n            >\n              {this.renderContent('cart')}\n            </TabBar.Item>\n            <TabBar.Item\n              icon={<IconFontIcon type='icon-me' />}\n              selectedIcon={<IconFontIcon type='icon-me-fill' />}\n              title=\"Me\"\n              key=\"me\"\n              selected={this.props.selectedTab === 'me'}\n              onPress={() => {\n                this.props.onSelectedTab('me')\n              }}\n            >\n              {this.renderContent('me')}\n            </TabBar.Item>\n          </TabBar>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main\n","import { connect } from 'react-redux'\nimport { actionMainChangeTab } from './actions'\nimport MainComponent from './components/main'\n\nconst mapStateToProps = (store, ownProps) => ({\n  selectedTab: store.mainSelectedTab,\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onSelectedTab: (tabName) => dispatch(actionMainChangeTab(tabName))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainComponent)","export const actionMainChangeTab = tabName => ({\n  type: 'MAIN_CHANGE_TAB',\n  tabName\n})","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListView, PullToRefresh } from 'antd-mobile';\nimport Constant from '../../../common/constant';\nimport axios from 'axios';\nimport NavBar from '../../../common/components/nav-bar';\n\n\nclass GoodsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onEndReached = this.onEndReached.bind(this);\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(Constant.SHOPINCAT_API_HOST + '/GOODS/goodsList?limit=20&page=' +\n            this.props.page +\n            '&thirdCategoryId=' +\n            this.props.match.params.thirdCategoryId).then(response => {\n                if (response && response.data && response.data.data && response.data.data.length > 0) {\n                    this.props.setPage(this.props.page + 1);\n                    this.props.onGoodsListDataResponse(response.data.data);\n                } else {\n                    this.props.setNoMoreData();\n                }\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.resetPage();\n    }\n\n    onEndReached(event) {\n        if (this.props.isNoMoreData) {\n            return;\n        }\n\n        axios.get(Constant.SHOPINCAT_API_HOST + '/GOODS/goodsList?limit=20&page=' +\n            this.props.page +\n            '&thirdCategoryId=' +\n            this.props.match.params.thirdCategoryId).then(response => {\n                if (response && response.data && response.data.data && response.data.data.length > 0) {\n                    this.props.setPage(this.props.page + 1);\n                    this.props.onGoodsListDataResponse(response.data.data);\n                } else {\n                    this.props.setNoMoreData();\n                }\n            });\n    }\n\n    onRefresh() {\n        this.props.setRefreshing(true);\n        this.props.resetPage();\n\n        axios.get(Constant.SHOPINCAT_API_HOST + '/GOODS/goodsList?limit=20&page=' +\n            this.props.page +\n            '&thirdCategoryId=' +\n            this.props.match.params.thirdCategoryId).then(response => {\n                if (response && response.data && response.data.data && response.data.data.length > 0) {\n                    this.props.setPage(this.props.page + 1);\n                    this.props.onGoodsListDataResponse(response.data.data);\n                } else {\n                    this.props.setNoMoreData();\n                }\n            });\n\n        this.props.setRefreshing(false);\n    };\n\n    render() {\n        const separator = (sectionID, rowID) => (\n            <div\n                key={`${sectionID}-${rowID}`}\n                style={{\n                    backgroundColor: '#F5F5F9',\n                    height: 1,\n                    borderTop: '1px solid #ECECED',\n                    borderBottom: '1px solid #ECECED',\n                }}\n            />\n        );\n        const row = (rowData, sectionID, rowID) => {\n            const goods = this.props.goodsList[rowID];\n            return (\n                <Link key={rowID} to={{ pathname: \"/goodsDetail/\" + goods.id }} >\n                    <div style={{ display: 'flex', padding: '15px' }}>\n                        <img style={{ height: '120px', width: '90px', marginRight: '15px', objectFit: 'cover' }} src={goods.pic} alt={goods.spu} />\n                        <div style={{ lineHeight: 1 }}>\n                            <div style={{ marginBottom: '25px', fontSize: '18px', color: 'rgba(80,80,80)' }}>{goods.title}</div>\n                            <div><span style={{ fontSize: '20px', color: '#FF6E27', marginRight: '8px' }}>${goods.price}</span><span style={{ fontSize: '14px', color: 'gray', textDecoration: 'line-through' }}>${goods.priceOrg}</span></div>\n                        </div>\n                    </div>\n                </Link>\n            );\n        };\n\n        return (\n            <>\n                <NavBar title='GoodsList' onLeftClick={() => { this.props.history.goBack(); }} />\n                <ListView\n                    dataSource={this.props.dataSource}\n                    renderRow={row}\n                    renderSeparator={separator}\n                    className=\"am-list\"\n                    pageSize={4}\n                    useBodyScroll\n                    scrollRenderAheadDistance={500}\n                    onEndReached={this.onEndReached}\n                    onEndReachedThreshold={20}\n                    pullToRefresh={<PullToRefresh\n                        refreshing={this.props.isRefreshing}\n                        onRefresh={this.onRefresh}\n                        distanceToRefresh='50'\n                    />}\n                />\n            </>\n        );\n    }\n\n}\n\nexport default GoodsList;","import { connect } from 'react-redux';\nimport GoodsList from './components/goodsList';\nimport { actionGoodsListGetData, actionGoodsListSetPage, actionGoodsListSetNoMoreData, actionGoodsListResetPage, actionGoodsListSetIsRefreshing } from './actions';\n\nimport './goodsList.css';\n\nconst mapStateToProps = (store, ownProps) => ({\n    match: ownProps.match,\n    history: ownProps.history,\n    isNoMoreData: store.goodsListIsNoMoreData,\n    goodsList: store.goodsListData.goodsList,\n    dataSource: store.goodsListData.dataSource,\n    page: store.goodsListPage,\n    isRefreshing: store.goodsListIsRefreshing\n  })\n  \n  const mapDispatchToProps = (dispatch, ownProps) => ({\n    setPage: (page) => dispatch(actionGoodsListSetPage(page)),\n    onGoodsListDataResponse: (goodsList) => dispatch(actionGoodsListGetData(goodsList)),\n    setNoMoreData: () => dispatch(actionGoodsListSetNoMoreData(true)),\n    resetPage: () => dispatch(actionGoodsListResetPage()),\n    setRefreshing: (isRefreshing) => dispatch(actionGoodsListSetIsRefreshing(isRefreshing))\n  })\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(GoodsList)","export const actionGoodsListGetData = goodsList => ({\n  type: 'GOODS_LIST_GET_DATA',\n  goodsList\n})\n\nexport const actionGoodsListSetPage = page => ({\n  type: 'GOODS_LIST_PAGE',\n  page\n})\n\nexport const actionGoodsListSetIsRefreshing = isRefreshing => ({\n  type: 'GOODS_LIST_SET_REFRESHING',\n  isRefreshing\n})\n\nexport const actionGoodsListSetNoMoreData = isNoMoreData => ({\n  type: 'GOODS_LIST_SET_NO_MORE_DATA',\n  isNoMoreData\n})\n\nexport const actionGoodsListResetPage = () => ({\n  type: 'GOODS_LIST_RESET_PAGE'\n})\n","import React from 'react';\nimport { Carousel, Modal, Tag, Toast } from 'antd-mobile';\nimport Constant from '../../../common/constant';\nimport axios from 'axios';\nimport NavBar from '../../../common/components/nav-bar';\nimport { Player, ControlBar, BigPlayButton } from 'video-react';\n\n\nclass GoodsDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClickBottomButton = this.onClickBottomButton.bind(this);\n        this.updateCurrentSku = this.updateCurrentSku.bind(this);\n        this.onSkuModalConfirmClick = this.onSkuModalConfirmClick.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(Constant.SHOPINCAT_API_HOST + '/GOODS/goodsDetail?id=' +\n            this.props.match.params.id).then(response => {\n                if (response && response.data && response.data.data) {\n                    let goodsData = response.data.data;\n                    this.props.setCurrentSkuPrice(goodsData.price);\n                    this.props.onGoodsDetailDataResponse(goodsData);\n                }\n            });\n\n    }\n\n    componentWillUnmount() {\n        this.props.resetPage();\n    }\n\n    onClickBottomButton(type) {\n        this.props.setIsShowSkuModal(true);\n        this.props.setCurrentOpType(type);\n    }\n\n    updateCurrentSku() {\n        let currentSkuPrice = this.props.goods.price;\n        let currentSku = null;\n\n        if (this.props.colorIndex > -1 && this.props.selectedSize !== '') {\n            for (let i = 0; i < this.props.skuList.length; ++i) {\n                let sku = this.props.skuList[i];\n                if (sku.color === this.props.colorList[this.props.colorIndex] && sku.size === this.props.selectedSize) {\n                    currentSku = sku;\n                    currentSkuPrice = sku.price;\n                    break;\n                }\n            }\n        }\n\n        this.props.setCurrentSkuPrice(currentSkuPrice);\n        this.props.setCurrentSku(currentSku);\n\n    }\n\n    onColorClick(idx) {\n        this.props.setColorIndex(idx);\n        this.props.setSelectedSize('');\n\n        this.updateCurrentSku();\n    }\n\n    onSizeTagClick(size, selected) {\n        if (selected) {\n            this.props.setSelectedSize(size);\n        }\n\n        this.updateCurrentSku();\n    }\n\n    onSkuModalConfirmClick() {\n        if (this.props.currentSku === null) {\n            Toast.fail('please choose both color and size', 2);\n            return;\n        }\n\n        this.props.setIsShowSkuModal(false)\n        if (this.props.currentOpType === 'cart') {\n            Toast.success('add to cart success', 2);\n        }\n\n        if (this.props.currentOpType === 'buy') {\n            this.props.history.push('/orderConfirm');\n        }\n    }\n\n    render() {\n        let selectedColorPicIndex = this.props.colorIndex > -1 ? this.props.colorImageIndexList[this.props.colorIndex] : this.props.colorImageIndexList[0];\n        let selectedMediaIndex = this.props.colorIndex > -1 ? this.props.colorImageIndexList[this.props.colorIndex] : 0;\n\n        return (\n            <div >\n                <NavBar title='GoodsDetail' onLeftClick={() => { this.props.history.goBack(); }} />\n\n                <div >\n                    <Carousel\n                        frameOverflow=\"visible\"\n                        infinite\n                        selectedIndex={selectedMediaIndex}\n                        style={{ overflow: 'hidden', height: '120vw' }}\n                    >\n                        {this.props.mediaList.map((url, index) => {\n                            if (index === 0 && this.props.goods.video) {\n                                return (\n                                    <div key={'goodsVideo-' + index} style={{\n                                        display: 'block',\n                                        position: 'relative',\n                                        top: '0',\n                                        height: '120vw'\n                                    }} >\n                                        <Player width='100%' height='100%' playsInline={true} fluid={false} poster={this.props.mediaList[1]}>\n                                            <source src={url} />\n                                            <ControlBar autoHide={false} />\n                                            <BigPlayButton position=\"center\" />\n                                        </Player>\n                                    </div>\n                                )\n                            } else {\n                                return (\n                                    <div key={'goodsPic-' + index} style={{\n                                        display: 'block',\n                                        position: 'relative',\n                                        top: '0',\n                                        height: '120vw'\n                                    }} >\n                                        <img\n                                            src={url}\n                                            alt={this.props.goods.spu}\n                                            style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                                        />\n                                    </div>\n                                )\n                            }\n                        }\n                        )}\n                    </Carousel>\n                </div>\n\n                <div className='goodsMain'>\n                    <div className='goodsTitle'>\n                        {this.props.goods.title}\n                    </div>\n                    <div className='goodsPriceDiv'>\n                        <span className='goodsPrice'>${this.props.goods.price}</span>\n                        <span className='goodsPriceOrg'>${this.props.goods.priceOrg}</span>\n                    </div>\n                    <div className='goodsColorsDiv'>\n                        <div className='goodsColorsLabel'>Colors</div>\n                        <div className='goodsColors'>\n                            {this.props.colorList.map((color, idx) => {\n                                let borderStr = this.props.colorIndex === idx ? '1px rgb(87,87,87) solid' : '';\n                                let widthStr = this.props.colorIndex === idx ? '24px' : '26px';\n                                let heightStr = this.props.colorIndex === idx ? '24px' : '26px';\n                                return (\n                                    <div key={color} style={{\n                                        padding: '2px',\n                                        border: borderStr,\n                                        marginRight: '8px',\n                                        width: widthStr,\n                                        height: heightStr,\n                                    }} onClick={this.onColorClick.bind(this, idx)}>\n                                        <div style={{\n                                            backgroundColor: color,\n                                            width: '100%',\n                                            height: '100%',\n                                        }}></div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className='goodsDescriptionDiv'>\n                        <div className='goodsDescriptionLabel'>Description</div>\n                        <div className='goodsDescription'>\n                            {this.props.goods.description && this.props.goods.description.map((desc, idx) => {\n                                return (\n                                    <div key={desc.key} style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        padding: '5px 0px',\n                                        width: '100%',\n                                        backgroundColor: idx % 2 === 0 ? '' : 'rgba(128,128,128,0.08)'\n                                    }} >\n                                        <div style={{\n                                            width: '35%',\n                                            fontSize: '16px'\n                                        }}>{desc.key + ':'}</div>\n                                        <div style={{\n                                            width: '65%',\n                                            color: 'grey',\n                                            fontSize: '15px'\n                                        }}>{desc.value}</div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n                <div className='bottomButtonDiv'>\n                    <div className='bottomButton' style={{ backgroundColor: 'orange' }} onClick={() => { this.onClickBottomButton('cart'); }}>Add To Cart</div>\n                    <div className='bottomButton' style={{ backgroundColor: 'red' }} onClick={() => { this.onClickBottomButton('buy'); }}>Buy Now</div>\n                </div>\n\n                <Modal\n                    popup\n                    onClose={() => { this.props.setIsShowSkuModal(false) }}\n                    visible={this.props.isShowSkuModal}\n                    animationType=\"slide-up\"\n                >\n                    <div className='skuModalDiv'>\n                        <div className='skuModalHead'>\n                            <img src={this.props.mediaList[selectedColorPicIndex]} alt='sku pic'\n                                style={{ width: '100px', height: '120px', objectFit: 'cover' }} />\n                            <span style={{ color: 'red', fontSize: '18px', fontWeight: 'bold', marginLeft: '8px' }}>${this.props.currentSkuPrice}</span>\n                        </div>\n\n                        <div className='goodsColorsDiv'>\n                            <div className='goodsColorsLabel'>Colors</div>\n                            <div className='goodsColors'>\n                                {this.props.colorList.map((color, idx) => {\n                                    let borderStr = this.props.colorIndex === idx ? '1px rgb(87,87,87) solid' : '';\n                                    let widthStr = this.props.colorIndex === idx ? '24px' : '26px';\n                                    let heightStr = this.props.colorIndex === idx ? '24px' : '26px';\n                                    return (\n                                        <div key={color} style={{\n                                            padding: '2px',\n                                            border: borderStr,\n                                            marginRight: '8px',\n                                            width: widthStr,\n                                            height: heightStr,\n                                        }} onClick={this.onColorClick.bind(this, idx)}>\n                                            <div style={{\n                                                backgroundColor: color,\n                                                width: '100%',\n                                                height: '100%',\n                                            }}></div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n\n\n                        <div className='goodsSizeDiv'>\n                            <div className='goodsSizeLabel'>Size</div>\n                            <div className='goodsSize'>\n                                {this.props.sizeList.map((size, idx) => {\n                                    let disabled = this.props.colorIndex > -1 && !this.props.colorSizeList[this.props.colorIndex].has(size);\n                                    return (\n                                        <Tag\n                                            key={size}\n                                            selected={this.props.selectedSize === size}\n                                            disabled={disabled}\n                                            onChange={this.onSizeTagClick.bind(this, size)}\n                                            className='goodsSizeTag'\n                                        >\n                                            {size}\n                                        </Tag>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='skuModalBottomButton' onClick={this.onSkuModalConfirmClick}>Confirm</div>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\n\nexport default GoodsDetail;","import { connect } from 'react-redux';\nimport GoodsDetail from './components/goodsDetail';\nimport { actionGoodsDetailGetData, actionGoodsDetailSetColorIndex, \n  actionGoodsDetailSetSelectedSize, actionGoodsDetailSetCurrentSkuPrice, \n  actionGoodsDetailSetCurrentSku, actionGoodsDetailSetCurrentOpType, \n  actionGoodsDetailResetPage, actionGoodsDetailSetIsShowSkuModal } from './actions';\n\nimport './goodsDetail.css';\nimport '../../../node_modules/video-react/dist/video-react.css';\n\nconst mapStateToProps = (store, ownProps) => ({\n    match: ownProps.match,\n    history: ownProps.history,\n    goods: store.goodsDetailData.goods,\n    mediaList: store.goodsDetailData.mediaList,\n    colorList: store.goodsDetailData.colorList,\n    colorImageIndexList: store.goodsDetailData.colorImageIndexList,\n    sizeList: store.goodsDetailData.sizeList,\n    colorSizeList: store.goodsDetailData.colorSizeList,\n    skuList: store.goodsDetailData.skuList,\n    colorIndex: store.goodsDetailColorIndex,\n    selectedSize: store.goodsDetailSelectedSize,\n    currentSkuPrice: store.goodsDetailCurrentSkuPrice,\n    currentSku: store.goodsDetailCurrentSku,\n    currentOpType: store.goodsDetailCurrentOpType,\n    isShowSkuModal: store.goodsDetailIsShowSkuModal\n  })\n  \n  const mapDispatchToProps = (dispatch, ownProps) => ({\n    onGoodsDetailDataResponse: (goodsDetail) => dispatch(actionGoodsDetailGetData(goodsDetail)),\n    setColorIndex: (colorIndex) => dispatch(actionGoodsDetailSetColorIndex(colorIndex)),\n    setSelectedSize: (selectedSize) => dispatch(actionGoodsDetailSetSelectedSize(selectedSize)),\n    setCurrentSkuPrice: (currentSkuPrice) => dispatch(actionGoodsDetailSetCurrentSkuPrice(currentSkuPrice)),\n    setCurrentSku: (currentSku) => dispatch(actionGoodsDetailSetCurrentSku(currentSku)),\n    setCurrentOpType: (currentOpType) => dispatch(actionGoodsDetailSetCurrentOpType(currentOpType)),\n    setIsShowSkuModal: (isShowSkuModal) => dispatch(actionGoodsDetailSetIsShowSkuModal(isShowSkuModal)),\n    resetPage: () => dispatch(actionGoodsDetailResetPage())\n  })\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(GoodsDetail)","export const actionGoodsDetailGetData = goodsDetail => ({\n  type: 'GOODS_DETAIL_GET_DATA',\n  goodsDetail\n})\n\nexport const actionGoodsDetailSetColorIndex = colorIndex => ({\n  type: 'GOODS_DETAIL_SET_COLOR_INDEX',\n  colorIndex\n})\n\nexport const actionGoodsDetailSetSelectedSize = selectedSize => ({\n  type: 'GOODS_DETAIL_SET_SELECTED_SIZE',\n  selectedSize\n})\n\nexport const actionGoodsDetailSetCurrentSkuPrice = currentSkuPrice => ({\n  type: 'GOODS_DETAIL_SET_CURRENT_SKU_PRICE',\n  currentSkuPrice\n})\n\nexport const actionGoodsDetailSetCurrentSku = currentSku => ({\n  type: 'GOODS_DETAIL_SET_CURRENT_SKU',\n  currentSku\n})\n\nexport const actionGoodsDetailSetCurrentOpType = currentOpType => ({\n  type: 'GOODS_DETAIL_SET_CURRENT_OP_TYPE',\n  currentOpType\n})\n\nexport const actionGoodsDetailSetIsShowSkuModal = (isShowSkuModal) => ({\n  type: 'GOODS_DETAIL_SET_IS_SHOW_SKU_MODAL',\n  isShowSkuModal\n})\n\nexport const actionGoodsDetailResetPage = () => ({\n  type: 'GOODS_DETAIL_RESET_PAGE'\n})\n","import React from 'react';\nimport NavBar from '../../common/components/nav-bar'\n\nclass OrderConfirm extends React.Component {\n  render() {\n    return (\n      <div style={{height: '100vw'}}>\n        <NavBar title='OrderConfirm' onLeftClick={() => { this.props.history.goBack(); }} />\n        <div style={{width: '100%', height: '100%', fontSize: '40px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}><span>Order Confirm</span></div>\n      </div>\n    );\n  }\n}\n\nexport default OrderConfirm","\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport Todo from '../pages/todo';\nimport Demo from '../pages/demo';\nimport Main from '../pages/main';\nimport GoodsList from '../pages/goodsList';\nimport GoodsDetail from '../pages/goodsDetail';\nimport OrderConfirm from '../pages/orderConfirm';\n\nconst RouterConfig = () => (\n    <div>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/goodsList/:thirdCategoryId\" component={GoodsList} />\n        <Route path=\"/goodsDetail/:id\" component={GoodsDetail} />\n        <Route path=\"/orderConfirm\" component={OrderConfirm} />\n        <Route path=\"/demo\" component={Demo} />\n        <Route path=\"/todo\" component={Todo} />\n    </div>\n)\n\nexport default RouterConfig;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\nimport {\n    createStore,\n    applyMiddleware,\n    compose\n} from 'redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport rootReducer from './reducers';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk),\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Routes />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}